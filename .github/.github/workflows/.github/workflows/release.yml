name: Release

# This workflow builds platform-specific executables using PyInstaller and
# publishes them to a GitHub release whenever a version tag is pushed or the
# workflow is run manually.  It uses a build matrix to target
# Linux, Windows and macOS runners.  Each matrix job builds the
# application, renames the output to a descriptive filename and uploads it as
# an asset to the release.
on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build application with PyInstaller
        run: |
          pyinstaller --noconfirm --onefile main.py

      - name: Rename artifact for platform
        shell: bash
        run: |
          FILENAME="fluxwanapp-${{ matrix.os }}"
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            FILENAME+=".exe"
            mv dist/main.exe "$FILENAME"
          else
            mv dist/main "$FILENAME"
          fi
          echo "::set-output name=artifact::$FILENAME"
        id: rename

      - name: Upload release asset
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.rename.outputs.artifact }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
